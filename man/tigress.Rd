% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tigress.R
\name{tigress}
\alias{tigress}
\title{Trustful Inference of Gene REgulation using Stability Selection}
\usage{
tigress(expdata, tflist = NULL, outfile = "prediction.txt", K = -1,
  alpha = 0.2, nstepsLARS = 5, split = 100, normalizeexp = TRUE,
  scoring = "area", allsteps = FALSE, verb = FALSE, usemulticore = TRUE)
}
\arguments{
\item{expdata}{Either a matrix of expression, or the name of a file
containing it. Each row is an experiment, each column a gene. The gene
names are the column names (or are in the first row of the file).}

\item{tflist}{The list of TFs, or the name of a file containing them. The TF
name should match the names in the gene list of the expression data file.
If NULL, then all genes are considered TF (default \code{NULL}).}

\item{K}{Total number of TF-target predicted edges to return, by decreasing
SS score. K=0 means that all edges are returned (default \code{0}).}

\item{nstepsLARS}{Number of LARS steps to perform in stability selection
(default \code{5}).}

\item{normalizeexp}{A boolean indicating whether we should mean center and
scale to unit variance the expression data for each gene (default
\code{TRUE}).}

\item{scoring}{The method for scoring a feature in stability selection. If
\code{"area"}, the score is the area under the stability curve up to
nstepsLARS steps, as proposed by Haury et al. If \code{"max"}, the score is
the maximum value of the stability curve, as proposed by Meinshausen and
BÃ¼hlmann in the original paper (default \code{"area"}).}

\item{allsteps}{A boolean indicating whether we should output the solutions
for all values of LARS steps up to nstepsLARS, or only for nstepsLARS. It
does not cost more computation to compute all solutions (default
\code{FALSE}).}

\item{verb}{A boolean indicating verbose mode. If \code{TRUE}, print messages
about what we are doing, otherwise remain silent (default \code{FALSE}).}

\item{usemulticore}{A boolean indicating whether multicore parallel computing
is used. This requires the package \code{parallel} (default \code{FALSE}).}

\item{outfile.}{A file name where we TF-target predictions are written. If
empty, do not write anything (default \code{''}).}

\item{nsplit}{Number of sample splits to perform in stability selection
(default \code{100})}
}
\value{
A dataframe (or list of dataframes if \code{allsteps=TRUE}) with the
  top \code{K} predicted edges. First column is the TF, second column the
  target gene, third column the score. If outfile is provided, the result is
  also written to the file OUTFILE (if allsteps=FALSE) or to several files
  OUTFILE1, OUTFILE1, ... (if allsteps=TRUE)
}
\description{
This function implements the TIGRESS model of Haury et al. for gene
regulatory network (GRN) inference from gene expression data. Given a matrix
of expression data, TIGRESS infers regulation from transcription factor (TFs)
to any target gene by performing a regression from the TF expression data to
the target gene expression, and scoring the candidate TFs by a stability
selection (SS) score. The TF-target pairs are then sorted by decreasing SS
score.
}
